@using DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels

@model DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels.PeopleViewModel

@{
    ViewBag.Title = "People";
}


<section class="content">
    <div class="row">
        &nbsp;
    </div>

    @Html.Partial("~/Views/Partials/_PageBlurb.cshtml", (BaseViewModel)Model)

    @Html.Partial("~/Views/Partials/_Staff.cshtml")
    </section>

@section myScripts {
    <script>
    $(document).ready(function() {
        $('#datatables-staffData').DataTable({
            responsive: true
        });
    });

    $(function () {
        var areaChartData = {
            labels: @Html.Raw(Json.Encode(Model.HolidaysTakenForYear.OrderBy(x => x.Key).Select(x => x.Key.ToString()).ToArray())),
            datasets: [
              {
                  label: "SOH Budget",
                  type: "bar",
                  fillColor: "rgba(210, 214, 222, 1)",
                  strokeColor: "rgba(210, 214, 222, 1)",
                  pointColor: "rgba(210, 214, 222, 1)",
                  pointStrokeColor: "#c1c7d1",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  data: @Html.Raw(Json.Encode(Model.HolidaysTakenForYear.OrderBy(x => x.Key).Select(x => x.Value.GetValueOrDefault()).ToArray()))
                  },
                  {
                      label: "My First dataset",
                      //new option, type will default to bar as that what is used to create the scale
                      type: "line",
                      fillColor: "rgba(220,20,220,0.2)",
                      strokeColor: "rgba(220,20,220,1)",
                      pointColor: "rgba(220,20,220,1)",
                      pointStrokeColor: "#fff",
                      pointHighlightFill: "#fff",
                      pointHighlightStroke: "rgba(220,220,220,1)",
                      data: [32, 25, 33, 88, 12, 92, 33]
                  }]
        };

        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $("#holsTakenbarChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        var barChartData = areaChartData;
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        };

        barChartOptions.datasetFill = false;
        //barChart.Bar(barChartData, barChartOptions);

        //var myLineBarChart = new Chart(barChartCanvas).LineBar(barChartData);
        var overlayData = {
            labels: @Html.Raw(Json.Encode(Model.HolidaysTakenForYear.OrderBy(x => x.Key).Select(x => x.Key.ToString()).ToArray())),
            datasets: [{
                label: "SOH Budget",
                type: "bar",
                yAxesGroup: "1",
                fillColor: "rgba(210, 214, 222, 1)",
                strokeColor: "rgba(210, 214, 222, 1)",
                highlightFill: "rgba(151,137,200,0.75)",
                highlightStroke: "rgba(151,137,200,1)",
                data: @Html.Raw(Json.Encode(Model.HolidaysTakenForYear.OrderBy(x => x.Key).Select(x => x.Value.GetValueOrDefault()).ToArray())),
            }, {
                label: "My Second dataset",
                type: "line",
                yAxesGroup: "2",
                fillColor: "rgba(151,187,205,0.5)",
                strokeColor: "rgba(151,187,205,0.8)",
                highlightFill: "rgba(151,187,205,0.75)",
                highlightStroke: "rgba(151,187,205,1)",
                data: @Html.Raw(Json.Encode(Model.ExpectedForPeriod.Select(x => x).ToArray())),
            }],
            yAxes: [{
                name: "1",
                scalePositionLeft: false,
                scaleFontColor: "rgba(151,137,200,0.8)"
            }, {
                name: "2",
                scalePositionLeft: true,
                scaleFontColor: "rgba(151,187,205,0.8)"
            }]
        };
        window.onload = function() {
            window.myOverlayChart = new Chart(document.getElementById("holsTakenbarChart").getContext("2d")).Overlay(overlayData, barChartOptions);
        }
    });
    </script>
}
