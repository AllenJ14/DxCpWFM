@using System.Configuration
@using DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels
@using DixonsCarphone.WorkforceManagement.ViewModels
@model SohSpendViewModel

@{ 
    var currWk = DateTime.Now.GetWeekOfYear(ConfigurationManager.AppSettings["FinancialYearStart"]);
    var wk = currWk - 8;
    var str = string.Empty;
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-sohSpend">
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            @for (var i = 0; i < 13; i++)
                            {
                                 str = i == 8 ? "Current Week" : string.Format("Week {0}", (wk + i).ToString().Substring(4));
                                    <th>@str</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>SOH Budget</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                var strBud = Model.SohBudgets.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.SohBudgets[wk + i]) : string.Empty;
                                <td>@strBud</td>
                            }
                        </tr>
                        <tr>
                            <td>SOH Spend</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                var strSp = Model.SohSpends.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.SohSpends[wk + i]) : string.Empty;
                                <td>@strSp</td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <!-- BAR CHART -->
                <div class="col-xs-2 vcenter">
                    <table>
                        <tr>
                            <td>SOH Budget &nbsp;</td>
                            <td>
                                <div class="col-sm-2" style="color:white; background-color: #c1c7d1">
                                    &nbsp;&nbsp;
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>SOH Spend &nbsp;</td>
                            <td>
                                <div class="col-sm-2" style="color:white; background-color: #00a65a">
                                    &nbsp;&nbsp;
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="box box-success col-md-10">
                    <div class="box-header with-border">
                        <h3 class="box-title">&nbsp;</h3>

                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="sohSpendbarChart" style="height:230px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-sohSpend">
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            @for (var i = 0; i < 13; i++)
                            {
                                str = i == 8 ? "Current Week" : string.Format("Week {0}", (wk + i).ToString().Substring(4));
                                <th>@str</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Management</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.Management.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.Management[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>Sales</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.Sales.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.Sales[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>Sales FT</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.SalesFt.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.SalesFt[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>Sales PT</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.SalesPt.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.SalesPt[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>Geek Squad</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.GeekSquad.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.GeekSquad[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>L1 Engineer</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.L1Engineer.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.L1Engineer[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>L2 Engineer</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.L2Engineer.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.L2Engineer[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                        <tr>
                            <td>Smart Academy</td>
                            @for (var i = 0; i < 13; i++)
                            {
                                var cWk = wk + i;
                                str = Model.SmartAcademy.ContainsKey(cWk) ? string.Format("{0:0.00}", Model.SmartAcademy[cWk].GetValueOrDefault()) : string.Empty;
                                <td>@str</td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
</div>

