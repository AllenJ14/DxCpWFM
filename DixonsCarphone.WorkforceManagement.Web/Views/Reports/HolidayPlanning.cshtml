@using DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels
@model HolidayPlanningVM

@{
    ViewBag.Title = "Holiday Planning";
}

<div class="row">
    <div class="col-lg-12">
        @Html.Partial("~/Views/Shared/_Messages.cshtml", Model)
    </div>
</div>
<section class="content">
    <div class="row">
        &nbsp;
    </div>

    @if (Model.DetailCollection != null)
    {
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading text-center">
                        <div class="row">
                            <strong class="col-md-offset-1">Holiday Planning</strong>
                            <label class="switch pull-right">
                                <input type="checkbox" id="advView"/>
                                <span class="slider round"></span>
                            </label>
                            <span class="pull-right adv-label">Advanced view</span>
                        </div>
                    </div>
                    <div class="panel-body">
                        <p>
                            Great holiday management will enable you to contract to the max contract base and deliver your SOH budget each week. It's really important that our colleagues maintain a healthy work life balance and use their holiday to rest and take time away from work.<br />
                            Holiday needs to be used inline with the needs of the business so at some points we'll encourage more holiday e.g. at quiet times of the year. At other points, e.g. peak periods, holiday may be controlled to ensure we can deploy enough hours to capatalise on business opportunities.<br />
                        </p>
                        <p>
                            We've introduced simple guidance to help you understand the ideal amount of holiday hours for your specific store to use each week of the year through this easy access portal.
                        </p>
                    </div>
                </div>
            </div>
        </div>
        @Html.Partial("~/Views/Partials/_HolidayPlanning.cshtml", Model)
    }
</section>
@section myScripts{
    <script>
        var depString = @Model.DeplArray;
        var myChart;
        var myData = {
            labels: ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52'],
            datasets:
                    [{
                        label: "Ideal",
                        borderColor: 'rgba(118, 0, 69, 0.7)',
                        data: @Model.GuideArray,
                        fill: false,
                        pointRadius: 0,
                        hitRadius: 4,
                        hoverBorderWidth: 0.5,
                        type: 'line',
                        tension: 0,
                        yAxisID: 'left-y-axis'
                    },
                    {
                        label: "Taken",
                        backgroundColor: 'rgba(0, 140, 168, 0.9)',
                        data: @Model.TakenArray,
                        yAxisID: 'left-y-axis'
                    },
                    {
                        label: "Scheduled",
                        backgroundColor: 'rgba(0, 140, 168, 0.4)',
                        data: @Model.SchedArray,
                        yAxisID: 'left-y-axis'
                    }
                    ]
        }
        var myOptions = {
            legend:{
                position: 'bottom',
            },
            maintainAspectRatio: false,
            scales: {
                xAxes: [{
                    stacked: true,
                    scaleLabel:{
                        display: true,
                        labelString: 'Week'
                    },
                    afterTickToLabelConversion: function(data){
                        var xLabels = data.ticks;
                        xLabels.forEach(function (labels, i) {
                            if (i % 2 == 1){
                                xLabels[i] = '';
                            }
                        });
                    }
                }],
                yAxes: [{
                    id: 'left-y-axis',
                    stacked: true,
                    position: 'left',
                    gridLines: {
                        drawOnChartArea: false
                    }
                }]
            },
            tooltips: {
                mode: 'index',
                callbacks: {
                    label: function(tooltipItem, data){
                        //return tooltipItems.yLabel + 'hrs';
                        var dataset = data.datasets[tooltipItem.datasetIndex];
                        if(dataset.yAxisID === "right-y-axis"){
                            return tooltipItem.yLabel + '%';
                        }
                        else{
                            return tooltipItem.yLabel + 'hrs';
                        };
                    }
                }
            }
        }

        $(function() {          
            var ctx = document.getElementById("holiday-chart")
            myChart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar',
                // The data for our dataset
                data: myData,
                // Configuration options go here
                options: myOptions
            });
        });

        $('#advView').click(function(){
            var ctx = document.getElementById("holiday-chart")
            myChart.destroy();
            if(myData.datasets.length === 5){
                myData.datasets.shift();
                myData.datasets.pop();
                myOptions.scales.yAxes.pop();
                myOptions.scales.yAxes[0].scaleLabel = {
                    display: false,
                    labelString: 'Holiday Hrs'
                };
            } else{
                myData.datasets.unshift({
                    label: "Deployment",
                    borderColor: 'rgba(250, 43, 10, 0.9)',
                    data: depString,
                    fill: false,
                    pointRadius: 0,
                    hitRadius: 4,
                    hoverBorderWidth: 0.5,
                    type: 'line',
                    tension: 0,
                    yAxisID: 'right-y-axis'
                });
                myData.datasets.push({
                    label: "100% Deployment",
                    borderColor: 'rgba(250, 43, 10, 0.4)',
                    data: ['100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100','100'],
                    type: 'line',
                    fill: false,
                    pointRadius: 0,
                    hitRadius: 0,
                    hoverBorderWidth: 0,
                    yAxisID: 'right-y-axis',
                    borderDash: [5,5]
                });
                myOptions.scales.yAxes[0].scaleLabel = {
                    display: true,
                    labelString: 'Holiday Hrs'
                };
                myOptions.scales.yAxes.push({
                    id: 'right-y-axis',
                    stacked: false,
                    position: 'right',
                    ticks: {
                        beginAtZero: true,
                        min: 0,
                        stepSize: 20,
                        callback: function(value, index, values){
                            return value + '%';
                        }
                    },
                    gridLines: {
                        drawOnChartArea: false
                    },
                    scaleLabel:{
                    display: true,
                    labelString: 'Deployed to Budget'
                }
                });
            };
            myChart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar',
                // The data for our dataset
                data: myData,
                // Configuration options go here
                options: myOptions
            });
        });
    </script>
    }
