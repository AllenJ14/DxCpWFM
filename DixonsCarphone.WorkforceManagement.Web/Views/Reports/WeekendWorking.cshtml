@model DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels.WeWorkingVm

@{ 
    ViewBag.title = "Weekend Working";
    double branchCount;
    double secbranchCount;
    var futuredate = DateTime.Now.AddDays(-(int)DateTime.Now.DayOfWeek -1 );
    bool seperator = false;
}

<section class="content">
    <div class="row">
        &nbsp;
    </div>

    <div class="row">
        <div class="col-lg-12">
            @Html.Partial("~/Views/Shared/_Messages.cshtml", Model)
        </div>
    </div>
    
    @if (Model.DisplayType >= 2)
    {
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading text-center">
                        <strong>BM Weekend Working</strong>
                    </div>
                    <div class="panel-body">
                        <ul>
                            <li>Future weeks (to the right of the solid line) shown below are based on schedules present in STAR and are updated 3 times daily.</li>
                            <li>Following sign off on Mondays the previous week is updated as per what was present on the completed timecard.</li>
                            <li><u>If a colleague was previously scheduled but did not physically punch in on that day the cell will be highlighted red.</u></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }    

    @if (Model.DisplayType == 2)
    {
        branchCount = Model.BranchList.Count();

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center" style="vertical-align:middle;">Branch</th>
                    @foreach (var item in Model.HeaderCollection)
                    {
                        if (!seperator && item.Date > futuredate)
                        {
                            seperator = true;
                            <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                        }
                        <th class="text-center">
                            <small>
                                @string.Format("{0:d}", item.Date)
                                <br />
                                @(item.Day)
                            </small>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.BranchList)
                {
                    seperator = false;
                    var branchSelection = Model.DetailCollection.Where(x => x.BranchNum == item.BranchNum).OrderBy(x => x.Date).ToList();
                    <tr>
                        <td><small>@string.Format("{0} - {1}", item.BranchNum, item.BranchName)</small></td>
                        @for (int i = 0; i < Model.HeaderCollection.Count(); i++)
                        {
                            if (!seperator && Model.HeaderCollection[i].Date > futuredate)
                            {
                                seperator = true;
                                <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                            }
                            <td class="text-center @(branchSelection[i].NotPunched == 1 ? "danger" : "")">
                                @if (branchSelection[i].Worked == 1)
                                {
                                    <span class="glyphicon glyphicon-ok"></span>
                                }
                                else if (branchSelection[i].Closed == 1)
                                {
                                    <span class="glyphicon glyphicon-minus" style="font-size:xx-small"></span>
                                }
                                else if(branchSelection[i].Worked == 2)
                                {
                                    <strong>H</strong>
                                }
                            </td>
                        }
                    </tr>
                }
                <tr>
                    @{seperator = false;
                    }
                    <td><strong>Region Total <small>Excl. Closed</small></strong></td>
                    @foreach (var item in Model.HeaderCollection)
                    {
                        var detailSelection = Model.DetailCollection.Where(x => x.Date == item.Date);
                        if (!seperator && item.Date > futuredate)
                        {
                            seperator = true;
                            <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                        }
                        <td class="text-center">
                            <strong>@string.Format("{0:0}%", (decimal)detailSelection.Where(x => x.Worked != 2).Sum(x => x.Worked) / (detailSelection.Where(x => x.Worked > 0 || x.Closed == null).Count()) * 100)</strong>
                        </td>
                    }
                </tr>
            </tbody>
        </table>
                        }
                        else if (Model.DisplayType == 3)
                        {
                            branchCount = (double)Model.DetailCollection.Select(x => new { x.RegionNum, x.BranchNum }).Distinct().Sum(x => x.RegionNum);
                            secbranchCount = (double)Model.SecDetailCollection.Select(x => new { x.RegionNum, x.BranchName }).Distinct().Sum(x => x.RegionNum);
        <div class="row">
            <div class="col-xs-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th class="text-center" style="vertical-align:middle;">Region</th>
                                        @foreach (var item in Model.HeaderCollection)
                                        {
                                            if (!seperator && item.Date > futuredate)
                                            {
                                                seperator = true;
                                                <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                            }
                                            <th class="text-center">
                                                <small>
                                                    @string.Format("{0:d}", item.Date)
                                                    <br />
                                                    @(item.Day)
                                                </small>
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.BranchList)
                                    {
                                        seperator = false;
                                        var branchSelection = Model.DetailCollection.Where(x => x.BranchNum == item.BranchNum).OrderBy(x => x.Date).ToList();
                                        <tr>
                                            <td><small>@item.BranchNum</small></td>
                                            @for (int i = 0; i < Model.HeaderCollection.Count(); i++)
                                            {
                                                if (!seperator && Model.HeaderCollection[i].Date > futuredate)
                                                {
                                                    seperator = true;
                                                    <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                                }
                                                <td class="text-center">
                                                    @string.Format("{0:0}%", (decimal)branchSelection[i].Worked / branchSelection[i].RegionNum * 100)
                                                </td>
                                            }
                                        </tr>
                                    }
                                    <tr>
                                        @{seperator = false;
                                        }
                                        <td><strong>Division Total</strong></td>
                                        @foreach (var item in Model.HeaderCollection)
                                        {
                                            if (!seperator && item.Date > futuredate)
                                            {
                                                seperator = true;
                                                <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                            }
                                            <td class="text-center">
                                                <strong>@string.Format("{0:0}%", Model.DetailCollection.Where(x => x.Date == item.Date).Sum(x => x.Worked) / branchCount * 100)</strong>
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        @{seperator = false;
                                        }
                                        <th class="text-center" style="vertical-align:middle;">Division</th>
                                        @foreach (var item in Model.SecHeaderCollection)
                                        {
                                            if (!seperator && item.Date > futuredate)
                                            {
                                                seperator = true;
                                                <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                            }
                                            <th class="text-center">
                                                <small>
                                                    @string.Format("{0:d}", item.Date)
                                                    <br />
                                                    @(item.Day)
                                                </small>
                                            </th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.SecBranchList)
                                    {
                                        seperator = false;
                                        var branchSelection = Model.SecDetailCollection.Where(x => x.BranchName == item.BranchName).OrderBy(x => x.Date).ToList();
                                        <tr>
                                            <td><small>@item.BranchName</small></td>
                                            @for (int i = 0; i < Model.SecHeaderCollection.Count(); i++)
                                            {
                                                if (!seperator && Model.HeaderCollection[i].Date > futuredate)
                                                {
                                                    seperator = true;
                                                    <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                                }
                                                <td class="text-center">
                                                    @string.Format("{0:0}%", (decimal)branchSelection[i].Worked / branchSelection[i].RegionNum * 100) 
                                                </td>
                                            }
                                        </tr>
                                    }
                                    <tr>
                                        @{seperator = false;
                                        }
                                        <td><strong>Channel Total</strong></td>
                                        @foreach (var item in Model.SecHeaderCollection)
                                        {
                                            if (!seperator && item.Date > futuredate)
                                            {
                                                seperator = true;
                                                <th style="width:0px;border-right:2px solid black;padding:0px;"></th>
                                            }
                                            <td class="text-center">
                                                <strong>@string.Format("{0:0}%", Model.SecDetailCollection.Where(x => x.Date == item.Date).Sum(x => x.Worked) / secbranchCount * 100)</strong>
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>        
    }
</section>
