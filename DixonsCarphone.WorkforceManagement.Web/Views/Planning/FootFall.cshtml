@using DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels
@model DixonsCarphone.WorkforceManagement.ViewModels.BusinessModels.FootFallsViewModel

@{
    ViewBag.Title = "FootFall";
}

<section class="content">
    <div class="row">
        &nbsp;
    </div>

    @Html.Partial("~/Views/Partials/_PageBlurb.cshtml", (BaseViewModel)Model)

    @Html.Partial("~/Views/Partials/_FootFalls.cshtml")
    <div class="row">
        <div class="col-md-6">
        </div>
    </div>
</section>

@section myScripts {
    <script>
        $(function () {
            $('#footFallDtp').datetimepicker({
                daysOfWeekDisabled: [1, 2, 3, 4, 5, 6],
                format: 'DD/MM/YYYY',
                useCurrent: false
                //calendarWeeks: true,
            })
            //Listen for the change even on the input
            .change(dateChanged)
            .on('dp.change', dateChanged);
        });

        function dateChanged(ev) {
            if ($('#SelectedDate').val() != '') {
                $('#footFallDateForm').submit();
            }
        }

        $(function () {
            // **********************Weekly***********************

                var areaChartCanvas = $("#weeklyFootFallareaChart").get(0).getContext("2d");
                // This will get the first returned node in the jQuery collection.
                var areaChart = new Chart(areaChartCanvas);

                var areaChartData = {
                    labels: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    datasets: [
                      {
                          label: "BAU",
                          fillColor: "rgba(210, 214, 222, 1)",
                          strokeColor: "rgba(210, 214, 222, 1)",
                          pointColor: "rgba(210, 214, 222, 1)",
                          pointStrokeColor: "#c1c7d1",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(220,220,220,1)",
                          data: @Html.Raw(Json.Encode(Model.WeeklyBau.Select(x => x.ToString("0.0")).ToArray()))
                      },
                      {
                          label: "Bank Holiday",
                          fillColor: "rgba(60,141,188,0.9)",
                          strokeColor: "rgba(60,141,188,0.8)",
                          pointColor: "#3b8bba",
                          pointStrokeColor: "rgba(60,141,188,1)",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(60,141,188,1)",
                          data:  @Html.Raw(Json.Encode(Model.WeeklyBankHoliday.Select(x => x.ToString("0.0")).ToArray()))
                      }
                    ]
                };

                var areaChartOptions = {
                    //Boolean - If we should show the scale at all
                    showScale: true,
                    //Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: false,
                    //String - Colour of the grid lines
                    scaleGridLineColor: "rgba(0,0,0,.05)",
                    //Number - Width of the grid lines
                    scaleGridLineWidth: 1,
                    //Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,
                    //Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,
                    //Boolean - Whether the line is curved between points
                    bezierCurve: true,
                    //Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.3,
                    //Boolean - Whether to show a dot for each point
                    pointDot: false,
                    //Number - Radius of each point dot in pixels
                    pointDotRadius: 4,
                    //Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,
                    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,
                    //Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,
                    //Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,
                    //Boolean - Whether to fill the dataset with a color
                    datasetFill: true,
                    //String - A legend template
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                    //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                    maintainAspectRatio: true,
                    //Boolean - whether to make the chart responsive to window resizing
                    responsive: true
                };

                //Create the line chart
                areaChart.Line(areaChartData, areaChartOptions);
            //*********************************************************************************************
            // **********************Daily***********************

                var dailyAreaChartCanvas = $("#dailyFootFallAreaChart").get(0).getContext("2d");
            // This will get the first returned node in the jQuery collection.
                var dailyAreaChart = new Chart(dailyAreaChartCanvas);

                var dailyAreaChartData = {
                    labels: ["7:00", "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00"],
                    datasets: [
                      {
                          label: "BAU",
                          fillColor: "rgba(210, 214, 222, 1)",
                          strokeColor: "rgba(210, 214, 222, 1)",
                          pointColor: "rgba(210, 214, 222, 1)",
                          pointStrokeColor: "#c1c7d1",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(220,220,220,1)",
                          data: @Html.Raw(Json.Encode(Model.DailyBau.Select(x => x.ToString("0.0")).ToArray()))
                      },
                      {
                          label: "Bank Holiday",
                          fillColor: "rgba(60,141,188,0.9)",
                          strokeColor: "rgba(60,141,188,0.8)",
                          pointColor: "#3b8bba",
                          pointStrokeColor: "rgba(60,141,188,1)",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(60,141,188,1)",
                          data:  @Html.Raw(Json.Encode(Model.DailyBankHoliday.Select(x => x.ToString("0.0")).ToArray()))
                      }
                    ]
                };

            //Create the line chart
            dailyAreaChart.Line(dailyAreaChartData, areaChartOptions);

           });
    </script>

}
